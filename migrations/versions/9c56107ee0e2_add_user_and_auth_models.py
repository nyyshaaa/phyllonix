"""Add user and auth models

Revision ID: 9c56107ee0e2
Revises: 
Create Date: 2025-08-30 12:06:13.662526

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '9c56107ee0e2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # create Postgres enum types first
    # credentialtype = postgresql.ENUM('PASSWORD', 'OAUTH', name='credentialtype')
    # credentialtype.create(op.get_bind(), checkfirst=True)

    # authmethod = postgresql.ENUM('PASSWORD', 'PHONE', 'OAUTH', name='authmethod')
    # authmethod.create(op.get_bind(), checkfirst=True)

    op.create_table('devicesession',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_token_hash', sa.String(length=64), nullable=False),
    sa.Column('device_name', sa.String(length=128), nullable=True),
    sa.Column('device_type', sa.String(length=64), nullable=True),
    sa.Column('user_agent_snippet', sa.String(length=512), nullable=True),
    sa.Column('device_fingerprint_hash', sa.String(length=64), nullable=True),
    sa.Column('ip_first_seen', postgresql.INET(), nullable=True),
    sa.Column('last_seen_ip', postgresql.INET(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.func.now()),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('session_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_devicesession_session_token_hash'), 'devicesession', ['session_token_hash'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=254), unique=True, nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False,server_default=sa.func.now()),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False,server_default=sa.func.now()),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('profile_image_url', sa.Text(), nullable=True),
    sa.Column('profile_image_thumb_url', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_public_id'), 'user', ['public_id'], unique=True)
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('line1', sa.String(length=255), nullable=False),     
    sa.Column('line2', sa.String(length=255), nullable=True),        
    sa.Column('city', sa.String(length=128), nullable=False),    
    sa.Column('state', sa.String(length=128), nullable=True),        
    sa.Column('postal_code', sa.String(length=20), nullable=False), 
    sa.Column('country', sa.String(length=2), nullable=False),       
    sa.Column('phone', sa.String(length=32), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False,server_default=sa.func.now()),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False,server_default=sa.func.now()),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_address_user_id'), 'address', ['user_id'], unique=False)
    op.create_table('credential',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('PASSWORD', 'OAUTH', name='credentialtype',create=False), nullable=False),
    sa.Column('provider', sa.String(length=64), nullable=True),            
    sa.Column('provider_user_id', sa.String(length=128), nullable=True), 
    sa.Column('provider_email', sa.String(length=320), nullable=True),    
    sa.Column('password_hash', sa.String(length=128), nullable=True), 
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False,server_default=sa.func.now()),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False,server_default=sa.func.now()),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credential_user_id'), 'credential', ['user_id'], unique=False)
    op.create_table('deviceauthtoken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_session_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token_hash', sa.String(length=64), nullable=False),         # SHA256 hex digest â†’ 64 chars
    sa.Column('issued_at', sa.DateTime(timezone=True), nullable=False,server_default=sa.func.now()),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_by', sa.String(length=32), nullable=True),
    sa.Column('revoked_reason', sa.String(length=256), nullable=True),
    sa.Column('auth_method', sa.Enum('PASSWORD', 'PHONE', 'OAUTH', name='authmethod',create=False), nullable=False),
    sa.ForeignKeyConstraint(['device_session_id'], ['devicesession.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deviceauthtoken_device_session_id'), 'deviceauthtoken', ['device_session_id'], unique=False)
    op.create_index(op.f('ix_deviceauthtoken_token_hash'), 'deviceauthtoken', ['token_hash'], unique=False)
    op.create_index(op.f('ix_deviceauthtoken_user_id'), 'deviceauthtoken', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_deviceauthtoken_user_id'), table_name='deviceauthtoken')
    op.drop_index(op.f('ix_deviceauthtoken_token_hash'), table_name='deviceauthtoken')
    op.drop_index(op.f('ix_deviceauthtoken_device_session_id'), table_name='deviceauthtoken')
    op.drop_table('deviceauthtoken')
    op.drop_index(op.f('ix_credential_user_id'), table_name='credential')
    op.drop_table('credential')
    op.drop_index(op.f('ix_address_user_id'), table_name='address')
    op.drop_table('address')
    op.drop_index(op.f('ix_user_public_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_devicesession_session_token_hash'), table_name='devicesession')
    op.drop_index(op.f('ix_devicesession_device_fingerprint_hash'), table_name='devicesession')
    op.drop_table('devicesession')

    authmethod = postgresql.ENUM('PASSWORD', 'PHONE', 'OAUTH', name='authmethod')
    authmethod.drop(op.get_bind(), checkfirst=True)

    credentialtype = postgresql.ENUM('PASSWORD', 'OAUTH', name='credentialtype')
    credentialtype.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
