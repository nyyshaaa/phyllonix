"""change indexes for users(email) and product(owner_id,name)

Revision ID: 06185d75b687
Revises: 59dcc8fe9422
Create Date: 2025-09-19 20:27:07.447625

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '06185d75b687'
down_revision: Union[str, Sequence[str], None] = '59dcc8fe9422'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    op.drop_constraint(op.f('uq_product_name_owner_id'), 'product', type_='unique')
    op.drop_index(op.f('ix_product_owner_id'), table_name='product')
    op.create_index(op.f('ix_product_owner_id'), 'product', ['owner_id'], unique=True)
    op.drop_index(op.f('idx_users_email_active'), table_name='users', postgresql_where='(deleted_at IS NULL)')
    op.create_unique_constraint(None, 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index(op.f('idx_users_email_active'), 'users', ['email'], unique=False, postgresql_where='(deleted_at IS NULL)')
    op.drop_index(op.f('ix_product_owner_id'), table_name='product')
    op.create_index(op.f('ix_product_owner_id'), 'product', ['owner_id'], unique=False)
    op.create_unique_constraint(op.f('uq_product_name_owner_id'), 'product', ['owner_id', 'name'], postgresql_nulls_not_distinct=False)
   
    # ### end Alembic commands ###
