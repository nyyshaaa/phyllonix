"""add user roles permissions schema

Revision ID: 9c2c0d4d37b6
Revises: 985e491d90ce
Create Date: 2025-08-30 17:41:45.804855

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c2c0d4d37b6'
down_revision: Union[str, Sequence[str], None] = '985e491d90ce'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('rolepermission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_id', 'permission_id', name='uq_role_permission_role_id_permission_id')
    )
    op.create_index(op.f('ix_rolepermission_permission_id'), 'rolepermission', ['permission_id'], unique=False)
    op.create_index(op.f('ix_rolepermission_role_id'), 'rolepermission', ['role_id'], unique=False)
    op.create_table('userrole',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id', name='uq_user_role_user_id_role_id')
    )
    op.create_index(op.f('ix_userrole_role_id'), 'userrole', ['role_id'], unique=False)
    op.create_index(op.f('ix_userrole_user_id'), 'userrole', ['user_id'], unique=False)
    
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    op.drop_index(op.f('ix_userrole_user_id'), table_name='userrole')
    op.drop_index(op.f('ix_userrole_role_id'), table_name='userrole')
    op.drop_table('userrole')
    op.drop_index(op.f('ix_rolepermission_role_id'), table_name='rolepermission')
    op.drop_index(op.f('ix_rolepermission_permission_id'), table_name='rolepermission')
    op.drop_table('rolepermission')
    op.drop_table('role')
    op.drop_table('permission')
    # ### end Alembic commands ###
