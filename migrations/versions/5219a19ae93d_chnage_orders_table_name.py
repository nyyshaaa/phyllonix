"""chnage orders table name

Revision ID: 5219a19ae93d
Revises: aeea1673d46a
Create Date: 2025-10-17 09:37:43.064892

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5219a19ae93d'
down_revision: Union[str, Sequence[str], None] = 'aeea1673d46a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=8), nullable=False),
    sa.Column('subtotal', sa.BigInteger(), nullable=False),
    sa.Column('tax', sa.BigInteger(), nullable=False),
    sa.Column('shipping', sa.BigInteger(), nullable=False),
    sa.Column('discount', sa.BigInteger(), nullable=False),
    sa.Column('total', sa.BigInteger(), nullable=False),
    sa.Column('shipping_address_json', sa.JSON(), nullable=False),
    sa.Column('billing_address_json', sa.JSON(), nullable=True),
    sa.Column('payment_method', sa.String(length=32), nullable=True),
    sa.Column('provider_order_id', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('placed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delievered_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['devicesession.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider_order_id')
    )
    op.create_index(op.f('ix_orders_public_id'), 'orders', ['public_id'], unique=True)
    op.create_index(op.f('ix_orders_session_id'), 'orders', ['session_id'], unique=False)
    op.create_index(op.f('ix_orders_status'), 'orders', ['status'], unique=False)
    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    op.drop_index(op.f('ix_order_public_id'), table_name='order')
    op.drop_index(op.f('ix_order_session_id'), table_name='order')
    op.drop_index(op.f('ix_order_status'), table_name='order')
    op.drop_index(op.f('ix_order_user_id'), table_name='order')
    op.drop_constraint(op.f('orderitem_order_id_fkey'), 'orderitem', type_='foreignkey')
    op.drop_constraint(op.f('payment_order_id_fkey'), 'payment', type_='foreignkey')
    op.drop_table('order')
    op.create_foreign_key(None, 'orderitem', 'orders', ['order_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'payment', 'orders', ['order_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'payment', type_='foreignkey')
    op.create_foreign_key(op.f('payment_order_id_fkey'), 'payment', 'order', ['order_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'orderitem', type_='foreignkey')
    op.create_foreign_key(op.f('orderitem_order_id_fkey'), 'orderitem', 'order', ['order_id'], ['id'], ondelete='CASCADE')
   
    op.create_table('order',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=8), autoincrement=False, nullable=False),
    sa.Column('subtotal', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('tax', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('shipping', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('discount', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('total', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('shipping_address_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('billing_address_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('placed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('delievered_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('provider_order_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['devicesession.id'], name=op.f('order_session_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('order_user_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('order_pkey')),
    sa.UniqueConstraint('provider_order_id', name=op.f('order_provider_order_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_order_user_id'), 'order', ['user_id'], unique=False)
    op.create_index(op.f('ix_order_status'), 'order', ['status'], unique=False)
    op.create_index(op.f('ix_order_session_id'), 'order', ['session_id'], unique=False)
    op.create_index(op.f('ix_order_public_id'), 'order', ['public_id'], unique=True)
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_status'), table_name='orders')
    op.drop_index(op.f('ix_orders_session_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_public_id'), table_name='orders')
    op.drop_table('orders')
    # ### end Alembic commands ###
